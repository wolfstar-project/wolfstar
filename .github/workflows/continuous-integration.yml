name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  Linting:
    name: Linting NodeJS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4
      - name: Add problem matchers
        run: echo "::add-matcher::.github/problemMatchers/eslint.json"
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.13.1
          run_install: false
      - name: Use Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Run ESLint
        run: pnpm lint --fix=false

  Building:
    name: Building NodeJS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4
      - name: Add problem matchers
        run: echo "::add-matcher::.github/problemMatchers/tsc.json"
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.13.1
          run_install: false
      - name: Use Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Generate Prisma types
        run: pnpm prisma:generate
      - name: Build code
        run: pnpm build

  UnitTesting:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.13.1
      - name: Use Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Generate Prisma types
        run: pnpm prisma:generate
      - name: Run unit tests
        run: pnpm test --coverage
      - name: Codecov Upload
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/cobertura-coverage.xml
          fail_ci_if_error: true
